{
  "Uuid": "17b54e70-e1ae-4daf-81be-33542b6f4e8c",
  "IsCustomNode": false,
  "Description": null,
  "Name": "get windowMetadata",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 732,
      "SelectedString": "OST_Walls",
      "Id": "bf909234d1e64765abb77ea839412e94",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6fff8f7cc3c84195bf77fc590543c099",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "fa98508885904c9faac955edbfccb3ac",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "aa690db7505641c49b7a3620d0a4cd66",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5373ba971dd74da8b93c9361cc2c8b12",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# -*- coding: utf-8 -*-\r\n\"\"\"\r\nWall & Hosted-Insert Exporter – v9  (2025-06-20)\r\n\r\n• Exports wall geometry / orientation / quantities.\r\n• Exports hosted inserts (windows, doors …) with orientation and glazing area\r\n  (material OR sub-category contains “glass” or “glazing”).\r\n• Fully recursive GeometryInstance walk.\r\n• ALL Revit-API property reads wrapped in safe_attr → no TypeError dialogs.\r\n• Robust Family / Type retrieval works in every Revit version.\r\n• Outputs two timestamped CSV files named:\r\n    <RevitProject>-WindowsAndGlassAreas-<timestamp>.csv\r\n    <RevitProject>-wallsSelfShading-<timestamp>.csv\r\n\"\"\"\r\n\r\nimport clr, os, re, csv, math\r\nfrom datetime import datetime\r\n\r\n# ── Revit plumbing ────────────────────────────────────────────────────────\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import ElementId, Options, GeometryInstance, Solid\r\n\r\nclr.AddReference(\"RevitServices\")\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit                                    # noqa: F401\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# ── helpers ───────────────────────────────────────────────────────────────\r\ndef safe_attr(obj, attr, default=None):\r\n    \"\"\"Return obj.attr if possible, otherwise default.\"\"\"\r\n    try:\r\n        return getattr(obj, attr, default)\r\n    except Exception:\r\n        return default\r\n\r\ndef safe_call(fn, default=None):\r\n    \"\"\"Call fn() and return its value or default on any error.\"\"\"\r\n    try:\r\n        return fn()\r\n    except Exception:\r\n        return default\r\n\r\nFT2M, SQFT2M2, CUFT2M3 = 0.3048, 0.092903, 0.0283168\r\ndef get_param(elem, name, fac=1.0):\r\n    return safe_call(lambda: round(elem.LookupParameter(name).AsDouble()*fac, 2))\r\n\r\ndef az(v):  return round((math.degrees(math.atan2(v.X, v.Y))+360) % 360, 2)\r\ndef vec(v): return round(v.X,2), round(v.Y,2), round(v.Z,2)\r\n\r\ndef safe_faces(solid):\r\n    return safe_call(lambda: list(solid.Faces), [])\r\n\r\ndef safe_subcat(face):\r\n    gs = safe_call(lambda: doc.GetElement(face.GraphicsStyleId))\r\n    cat = safe_attr(gs, \"GraphicsStyleCategory\")\r\n    return safe_attr(cat, \"Name\", \"\")\r\n\r\n# ── inputs ────────────────────────────────────────────────────────────────\r\nwalls_in, path_in = IN[0], IN[1]\r\n\r\n# ── path handling ─────────────────────────────────────────────────────────\r\ndef make_paths(p):\r\n    \"\"\"Return two output paths based on Revit project title plus timestamp.\"\"\"\r\n    if isinstance(p, list):\r\n        if len(p) != 1 or not isinstance(p[0], str):\r\n            raise ValueError(\"IN[1] must be a file-path string or list of one.\")\r\n        p = p[0]\r\n    if not isinstance(p, str):\r\n        raise ValueError(\"IN[1] must be a string.\")\r\n\r\n    # folder: either the directory part of p or p itself if it is a folder\r\n    folder = os.path.dirname(p) if os.path.splitext(p)[1] else p\r\n    if folder and not os.path.exists(folder):\r\n        os.makedirs(folder)\r\n\r\n    # sanitise Revit project title for file-system safety\r\n    title = re.sub(r'[\\\\/*?:\"<>|]', \"_\", doc.Title).strip()\r\n    if not title:\r\n        title = \"UntitledProject\"\r\n\r\n    ext = \".csv\"\r\n    ts  = datetime.now().strftime(\"%Y%m%d-%H%M%S\")\r\n\r\n    base = os.path.join(folder, title) if folder else title\r\n    return (\r\n        f\"{base}-WindowsAndGlassAreas-{ts}{ext}\",\r\n        f\"{base}-wallsSelfShading-{ts}{ext}\"\r\n    )\r\n\r\nwindows_csv, walls_csv = make_paths(path_in)\r\n\r\n# ── unwrap input selection to DB elements ─────────────────────────────────\r\ndef to_db(e):\r\n    if hasattr(e, \"InternalElement\"):\r\n        return e.InternalElement\r\n    if isinstance(e, ElementId):\r\n        return doc.GetElement(e)\r\n    if isinstance(e, int):\r\n        return doc.GetElement(ElementId(e))\r\n    return e\r\n\r\nwalls = [\r\n    to_db(w)\r\n    for sub in walls_in\r\n    for w in (sub if isinstance(sub, list) else [sub])\r\n    if to_db(w)\r\n]\r\n\r\n# ── WALL DATA ─────────────────────────────────────────────────────────────\r\nwall_rows = []\r\nfor w in walls:\r\n    wid   = w.Id.IntegerValue\r\n    name  = safe_attr(w, \"Name\", \"\")\r\n    wtype = safe_attr(safe_attr(w, \"WallType\"), \"Name\", \"\")\r\n\r\n    level = safe_call(lambda: doc.GetElement(w.LevelId).Name)\r\n\r\n    try:\r\n        ox, oy, oz = vec(w.Orientation)\r\n        azi = az(w.Orientation)\r\n    except Exception:\r\n        ox = oy = oz = azi = None\r\n\r\n    wall_rows.append([\r\n        wid, name, wtype, level,\r\n        get_param(w, \"Length\", FT2M),\r\n        get_param(w, \"Area\",   SQFT2M2),\r\n        get_param(w, \"Volume\", CUFT2M3),\r\n        ox, oy, oz, azi\r\n    ])\r\n\r\n# ── HOSTED DATA ───────────────────────────────────────────────────────────\r\nopts = Options(); opts.IncludeNonVisibleObjects = True\r\nkeywords = (\"glass\", \"glazing\")\r\ndef is_glass(txt): return any(k in (txt or \"\").lower() for k in keywords)\r\n\r\ndef glass_stats(geom_iter):\r\n    total = 0.0\r\n    source = None\r\n    for obj in geom_iter:\r\n        if obj is None:\r\n            continue\r\n        if isinstance(obj, GeometryInstance):\r\n            a, s = glass_stats(obj.GetInstanceGeometry())\r\n            total += a\r\n            if s and not source:\r\n                source = s\r\n        elif isinstance(obj, Solid):\r\n            for f in safe_faces(obj):\r\n                sub = safe_subcat(f)\r\n                mat = safe_attr(doc.GetElement(f.MaterialElementId), \"Name\", \"\")\r\n                if is_glass(sub) or is_glass(mat):\r\n                    if not source:\r\n                        source = sub or mat\r\n                    total += safe_call(lambda: f.Area, 0)\r\n    return total, source\r\n\r\nhost_rows = []\r\nfor host in walls:\r\n    inserts = safe_call(lambda: host.FindInserts(True, False, False, False), [])\r\n\r\n    for iid in inserts or []:\r\n        inst = doc.GetElement(iid)\r\n        if not inst:\r\n            continue\r\n\r\n        cid  = inst.Id.IntegerValue\r\n        cat  = safe_attr(inst.Category, \"Name\", \"\")\r\n\r\n        # robust Family / Type\r\n        fam = typ = \"\"\r\n        sym = safe_attr(inst, \"Symbol\") or doc.GetElement(safe_call(inst.GetTypeId))\r\n        if sym:\r\n            typ = safe_attr(sym, \"Name\", \"\")\r\n            fam = safe_attr(sym, \"FamilyName\", \"\") \\\r\n                  or safe_attr(safe_attr(sym, \"Family\"), \"Name\", \"\")\r\n\r\n        lvl = \"\"\r\n        lp  = safe_call(lambda: inst.LookupParameter(\"Level\"))\r\n        if lp and lp.HasValue:\r\n            lvl = safe_call(lambda: doc.GetElement(lp.AsElementId()).Name, \"\")\r\n\r\n        try:\r\n            hox, hoy, hoz = vec(inst.FacingOrientation)\r\n            hazi = az(inst.FacingOrientation)\r\n        except Exception:\r\n            hox = hoy = hoz = hazi = None\r\n\r\n        geom = safe_call(lambda: inst.get_Geometry(opts), [])\r\n        gsf, gsrc = glass_stats(geom)\r\n        garea = round(gsf * SQFT2M2, 2) if gsf else None\r\n\r\n        host_rows.append([\r\n            cid, cat, fam, typ, lvl, host.Id.IntegerValue,\r\n            hox, hoy, hoz, hazi, gsrc, garea\r\n        ])\r\n\r\n# ── CSV writer ────────────────────────────────────────────────────────────\r\ndef write_csv(path, header, rows):\r\n    try:\r\n        with open(path, \"w\", newline=\"\", encoding=\"utf-8-sig\") as f:\r\n            csv.writer(f).writerows([header] + rows)\r\n        return path\r\n    except PermissionError:\r\n        base, ext = os.path.splitext(path)\r\n        alt = f\"{base}_{datetime.now().strftime('%H%M%S')}{ext}\"\r\n        with open(alt, \"w\", newline=\"\", encoding=\"utf-8-sig\") as f:\r\n            csv.writer(f).writerows([header] + rows)\r\n        return alt\r\n\r\nhdr_walls = [\r\n    \"ElementId\", \"Name\", \"Wall Type\", \"Level\",\r\n    \"Length (m)\", \"Area (m²)\", \"Volume (m³)\",\r\n    \"OriX\", \"OriY\", \"OriZ\", \"Azimuth (°)\"\r\n]\r\nhdr_hosted = [\r\n    \"ElementId\", \"Category\", \"Family\", \"Type\", \"Level\", \"HostWallId\",\r\n    \"OriX\", \"OriY\", \"OriZ\", \"Azimuth (°)\",\r\n    \"Glass Source\", \"Glass Area (m²)\"\r\n]\r\n\r\nOUT = (\r\n    write_csv(windows_csv, hdr_hosted, host_rows),  # Windows & Glass Areas\r\n    write_csv(walls_csv,   hdr_walls,  wall_rows)   # Walls Self-Shading\r\n)\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "4549800d541448539cbf9bfaa74bd8b4",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "1d34743e177743a4b7f27f1bfba3b7a3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c917e3ef40f4b2a8566748a9fa10295",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6547b8718cf4bb093687d754a5bb386",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "b8dbbaf47a7c4510a58471e2486cfc3e",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "fe7bc7de44b049bd820c0a7190c7b4ba",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd5dd8e85057449498507ea5a57e2d0a",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list from the given inputs"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "Id": "5c0f692556ec46f6b6e16c92b81210f8",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "fa5e745a3b714f90b470d99a643b969a",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c965561105d14de8ae4942976c21fc08",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 57.6,
      "WatchHeight": 38.4,
      "Id": "4ea5e41c32a34f019d55c24f1f710da7",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "b95ac342e5704f8f8e2e4f1a87899451",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18605add4722404b86d39a117d8351a8",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# -*- coding: utf-8 -*-\r\n# Dynamo 2.x – works in both IronPython 2.7 and CPython 3 nodes\r\n\r\nimport clr, sys\r\nclr.AddReference('RevitAPI')\r\nclr.AddReference('RevitServices')\r\nfrom Autodesk.Revit.DB import BuiltInParameter, UnitUtils\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# ---------- Unit helpers (Revit 2021+ vs earlier) ----------------------------\r\ntry:                               # Revit 2021+\r\n    from Autodesk.Revit.DB import UnitTypeId as _U\r\n    M, M2, M3 = _U.Meters, _U.SquareMeters, _U.CubicMeters\r\nexcept ImportError:                # Revit ≤2020\r\n    from Autodesk.Revit.DB import DisplayUnitType as _U\r\n    M, M2, M3 = _U.Meters, _U.SquareMeters, _U.CubicMeters\r\n\r\ndef to_unit(val, ut):\r\n    return UnitUtils.ConvertFromInternalUnits(val, ut)\r\n\r\n# ---------- utilities --------------------------------------------------------\r\ndef flatten(xs):\r\n    for x in xs:\r\n        if isinstance(x, (list, tuple)):\r\n            for y in flatten(x):\r\n                yield y\r\n        else:\r\n            yield x\r\n\r\ndef unwrap(e):\r\n    if e is None: return None\r\n    if hasattr(e, \"InternalElement\"):  # Dynamo wrapper\r\n        return e.InternalElement\r\n    if hasattr(e, \"Id\"):               # raw element\r\n        return e\r\n    try:                               # maybe ElementId/int\r\n        from Autodesk.Revit.DB import ElementId\r\n        return doc.GetElement(ElementId(int(e)))\r\n    except Exception:\r\n        return None\r\n\r\n# ---------- take input -------------------------------------------------------\r\nraw_in = IN[0] if IN and len(IN) else []\r\nelements = [unwrap(x) for x in flatten(raw_in)]\r\n\r\nwalls = []\r\nfor e in elements:                     # <= no list-comp! safer\r\n    try:\r\n        if e and e.Category and e.Category.Name == \"Walls\":\r\n            walls.append(e)\r\n    except Exception:                  # “property cannot be read”\r\n        pass\r\n\r\n# ---------- output table -----------------------------------------------------\r\ntable = [[\r\n    \"ElementId\", \"Name\", \"Wall Type\", \"Level\",\r\n    \"Length (m)\", \"Area (m²)\", \"Volume (m³)\", \"Hosted Element Ids\"\r\n]]\r\n\r\ndef safe_double(elem, bip):\r\n    try:\r\n        p = elem.get_Parameter(bip)\r\n        if p and p.HasValue:\r\n            return p.AsDouble()\r\n    except Exception:                  # catches “property cannot be read”\r\n        pass\r\n    return None\r\n\r\nfor w in walls:\r\n    eid   = w.Id.IntegerValue\r\n    name  = getattr(w, \"Name\", \"Unnamed Wall\") or \"Unnamed Wall\"\r\n\r\n    try:\r\n        wtype = doc.GetElement(w.GetTypeId()).Name\r\n    except Exception:\r\n        wtype = \"—\"\r\n\r\n    try:\r\n        level = doc.GetElement(w.LevelId).Name\r\n    except Exception:\r\n        level = \"—\"\r\n\r\n    ln  = safe_double(w, BuiltInParameter.CURVE_ELEM_LENGTH)\r\n    ar  = safe_double(w, BuiltInParameter.HOST_AREA_COMPUTED)\r\n    vol = safe_double(w, BuiltInParameter.HOST_VOLUME_COMPUTED)\r\n\r\n    # fallback length from location curve\r\n    if ln is None:\r\n        try:\r\n            if w.Location: ln = w.Location.Curve.Length\r\n        except Exception:\r\n            pass\r\n\r\n    length = round(to_unit(ln,  M), 2)  if ln  else None\r\n    area   = round(to_unit(ar,  M2), 2) if ar  else None\r\n    volume = round(to_unit(vol, M3), 2) if vol else None\r\n\r\n    # hosted elements\r\n    try:\r\n        hosted_ids = [hid.IntegerValue\r\n                      for hid in w.GetHostedElements(True, True, True, True)]\r\n    except Exception:\r\n        hosted_ids = None\r\n\r\n    table.append([eid, name, wtype, level,\r\n                  length, area, volume, hosted_ids])\r\n\r\nOUT = table if len(table) > 1 else [[\"No walls found in input\"]]\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "305c1fc1347241478b4d8709e99faec8",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "05f1e02c3c8d47789916525caf38fa5f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77618c8b48e34ebea8b1c0ff6b5b2c58",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "Id": "61cb6740d7944a5785f870558da14bb0",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c2f7e4e3cb594e9e932039b6c091329d",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system and returns its file path",
      "HintPath": "D:\\Mostafa\\PhD\\Walls_20250618-141039.csv",
      "InputValue": "D:\\Mostafa\\PhD\\Walls_20250618-141039.csv"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "import clr, os, csv\r\n\r\n# --- Revit & Dynamo plumbing ---------------------------------------------\r\n# Revit API\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import ElementId\r\n\r\n# Dynamo / RevitServices\r\nclr.AddReference(\"RevitServices\")\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\n# CPython3 node needs this to unwrap Dynamo wrappers:\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# --- inputs ---------------------------------------------------------------\r\nwalls_in = IN[0]\r\npath_in  = IN[1]\r\n\r\n# --- normalize file path -------------------------------------------------\r\n# allow a single‐item list of string or a bare string\r\nif isinstance(path_in, list):\r\n    if len(path_in)!=1 or not isinstance(path_in[0], str):\r\n        raise ValueError(\"IN[1] must be a single file‐path string (or list of one).\")\r\n    file_path = path_in[0]\r\nelif isinstance(path_in, str):\r\n    file_path = path_in\r\nelse:\r\n    raise ValueError(\"IN[1] must be a string or single‐item list of string.\")\r\n\r\n# ensure folder exists (but don’t confuse file name with folder)\r\nfolder = os.path.dirname(file_path)\r\nif folder and not os.path.exists(folder):\r\n    os.makedirs(folder)\r\n\r\n# build hosted‐elements filename\r\nbase, ext = os.path.splitext(file_path)\r\nif not ext:\r\n    ext = \".csv\"\r\nhosted_path = base + \"_Hosted\" + ext\r\n\r\n# --- flatten one level of nesting ----------------------------------------\r\nflat = []\r\nfor item in walls_in:\r\n    if isinstance(item, list):\r\n        flat.extend(item)\r\n    else:\r\n        flat.append(item)\r\n\r\n# --- helper: unwrap to DB element ----------------------------------------\r\ndef to_db(elem):\r\n    # Dynamo wrapper\r\n    if hasattr(elem, \"InternalElement\"):\r\n        return elem.InternalElement\r\n    # raw ElementId\r\n    if isinstance(elem, ElementId):\r\n        return doc.GetElement(elem)\r\n    # plain int\r\n    if isinstance(elem, int):\r\n        return doc.GetElement(ElementId(elem))\r\n    # assume already a DBElement\r\n    return elem\r\n\r\nwalls = [to_db(w) for w in flat if to_db(w) is not None]\r\n\r\n# --- unit conversion factors ---------------------------------------------\r\nFT2M    = 0.3048\r\nSQFT2M2 = 0.092903\r\nCUFT2M3 = 0.0283168\r\n\r\ndef get_param(elem, name, factor=1.0):\r\n    p = elem.LookupParameter(name)\r\n    if p is None or not p.HasValue:\r\n        return None\r\n    try:\r\n        return p.AsDouble() * factor\r\n    except:\r\n        return None\r\n\r\n# --- collect wall data ---------------------------------------------------\r\nwall_rows = []\r\nfor w in walls:\r\n    wid   = w.Id.IntegerValue\r\n    name  = getattr(w, \"Name\", \"\")\r\n    # wall‐type name\r\n    try:    wtype = w.WallType.Name\r\n    except: wtype = \"\"\r\n    # level\r\n    lvl = \"\"\r\n    try:\r\n        lid = w.LevelId\r\n        lvl = doc.GetElement(lid).Name if lid else \"\"\r\n    except:\r\n        pass\r\n    length = get_param(w, \"Length\", FT2M)\r\n    area   = get_param(w, \"Area\",   SQFT2M2)\r\n    volume = get_param(w, \"Volume\", CUFT2M3)\r\n    wall_rows.append([wid, name, wtype, lvl, length, area, volume])\r\n\r\n# --- collect hosted‐insert data ------------------------------------------\r\nhosted_rows = []\r\nfor w in walls:\r\n    host_id = w.Id.IntegerValue\r\n    try:\r\n        inserts = w.FindInserts(True, False, False, False)\r\n    except:\r\n        inserts = []\r\n    for eid in inserts:\r\n        inst = doc.GetElement(eid)\r\n        if inst is None: \r\n            continue\r\n        iid  = inst.Id.IntegerValue\r\n        cat  = inst.Category.Name if inst.Category else \"\"\r\n        fam  = \"\"\r\n        typ  = \"\"\r\n        try:\r\n            sym = inst.Symbol\r\n            fam = sym.Family.Name\r\n            typ = sym.Name\r\n        except:\r\n            pass\r\n        # instance level\r\n        lvl = \"\"\r\n        lp  = inst.LookupParameter(\"Level\")\r\n        if lp and lp.HasValue:\r\n            try:\r\n                lvl = doc.GetElement(lp.AsElementId()).Name\r\n            except:\r\n                pass\r\n        hosted_rows.append([iid, cat, fam, typ, lvl, host_id])\r\n\r\n# --- write the two CSVs --------------------------------------------------\r\nwith open(file_path,   \"w\", newline=\"\", encoding=\"utf-8-sig\") as f:\r\n    w = csv.writer(f)\r\n    w.writerow([\"ElementId\",\"Name\",\"Wall Type\",\"Level\",\r\n                \"Length (m)\",\"Area (m²)\",\"Volume (m³)\"])\r\n    w.writerows(wall_rows)\r\n\r\nwith open(hosted_path, \"w\", newline=\"\", encoding=\"utf-8-sig\") as f:\r\n    w = csv.writer(f)\r\n    w.writerow([\"ElementId\",\"Category\",\"Family\",\"Type\",\r\n                \"Level\",\"HostWallId\"])\r\n    w.writerows(hosted_rows)\r\n\r\n# --- outputs --------------------------------------------------------------\r\n# returns the two paths so you can drill‐open them from Dynamo\r\nOUT = file_path, hosted_path\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e06a5457231945b48df3957ccfb35b29",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "0302614c9317436ab8de92034fbf3a72",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ddb3ce802cc45789e3fa40fc6ebe2a2",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "30de326f89524276bdc63e76ec4f544c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementMultipleSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-000538cc",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-000538cd",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-000538ce",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-000538cf",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-000538d1",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-000538d2",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-000538d5",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-000538d7",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-000538d8",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-000538d9",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-000538da",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-000538db",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-000538dc",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-000538dd",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-000538de",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-0005392f",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-00053930",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-00053931",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-00053932",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-00053933",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-00053934",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-00053935",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-00053936",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-00053937",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-00053938",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-00053939",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-0005393a",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-0005393b",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-00053a49",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-00053a4b",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-00053a7b",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-00053b2f",
        "cba57f4f-d9ab-4d2b-a609-7ae42035b4a8-00053b5f",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-000554af",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-000555c2",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-000555d9",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-000555de",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-000555e3",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-000555fd",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-000555fe",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-00055600",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-00055601",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-00055602",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-00055606",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-00055607",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-00055609",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-0005560a",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-0005560b",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-0005560f",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-00055610",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-00055612",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-00055613",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-00055614",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-00055618",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-00055619",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-0005561a",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-0005561b",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-0005561c",
        "efe38757-6d94-4d49-8eab-42fbd51b7370-0005561d",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055950",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055996",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-000559ab",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-000559b0",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-000559b5",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-000559ba",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-000559bf",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-000559c4",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-000559c9",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a66",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a67",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a68",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a69",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a6a",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a6b",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a6c",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a6d",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a6e",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a8b",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a8c",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a8d",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a8e",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a8f",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a90",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a91",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a92",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a93",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a94",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a95",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a96",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a97",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a98",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a99",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a9a",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a9b",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055a9c",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055aa1",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055aa2",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055aa3",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055aa4",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055aa5",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055aa6",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055aa7",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055aa8",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055aa9",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055aaa",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055aab",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055aac",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055aad",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055aae",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055aaf",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055ab0",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055ab1",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055ab2",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055ab7",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055ab8",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055ab9",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055aba",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055abb",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055abc",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055abd",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055abe",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055abf",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055ac0",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055ac1",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055ac2",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055ac3",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055ac4",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055ac5",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055ac6",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055ac7",
        "ef450b73-c3ea-40fa-86ac-4a7fce420760-00055ac8",
        "1ebeb7ef-22fc-4f7c-b41b-0717fe892ff7-00056068",
        "58748cb3-f873-4030-b68d-698a6bb92d61-000560cd",
        "58748cb3-f873-4030-b68d-698a6bb92d61-000560ce",
        "58748cb3-f873-4030-b68d-698a6bb92d61-000560d0",
        "58748cb3-f873-4030-b68d-698a6bb92d61-000560d1",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-0005660f",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056610",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056611",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056612",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056613",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056625",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056626",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056627",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056628",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056629",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-0005662d",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-0005662e",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-0005662f",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056630",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056631",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056635",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056636",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056637",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056638",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056639",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-0005663d",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-0005663e",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-0005663f",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056640",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056641",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056662",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056672",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056691",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-000566ac",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-000566c3",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-000566db",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-000566ea",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-000566fd",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056714",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056724",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-0005673c",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-0005674f",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-0005676b",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056787",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-0005679f",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-000567b1",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-000567cb",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-000567dd",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-000567f1",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056806",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056820",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056832",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-0005684c",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-0005684f",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056852",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056867",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-0005686a",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-0005686d",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056870",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056873",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056876",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056879",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-0005687c",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-0005687f",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-00056882",
        "69a2100a-76c7-4011-b495-b4c54c3c41b9-000568f9",
        "fa30c15d-eac0-42a8-aaa4-397c39f51455-000569d4",
        "fa30c15d-eac0-42a8-aaa4-397c39f51455-00056a7b",
        "fa30c15d-eac0-42a8-aaa4-397c39f51455-00056a80",
        "fa30c15d-eac0-42a8-aaa4-397c39f51455-00056a85",
        "fa30c15d-eac0-42a8-aaa4-397c39f51455-00056a8a",
        "fa30c15d-eac0-42a8-aaa4-397c39f51455-00056a8f",
        "fa30c15d-eac0-42a8-aaa4-397c39f51455-00056a94",
        "fa30c15d-eac0-42a8-aaa4-397c39f51455-00056a99",
        "b5d183f4-a797-4bf4-b654-48cf6b98edac-00056e4b",
        "b5d183f4-a797-4bf4-b654-48cf6b98edac-00056e4c",
        "b5d183f4-a797-4bf4-b654-48cf6b98edac-00056e4d",
        "b5d183f4-a797-4bf4-b654-48cf6b98edac-00056e51",
        "b5d183f4-a797-4bf4-b654-48cf6b98edac-00056e52",
        "b5d183f4-a797-4bf4-b654-48cf6b98edac-00056e53",
        "b5d183f4-a797-4bf4-b654-48cf6b98edac-00056e57",
        "b5d183f4-a797-4bf4-b654-48cf6b98edac-00056e58",
        "b5d183f4-a797-4bf4-b654-48cf6b98edac-00056e59",
        "745c2bf6-51da-4211-8bd9-ec223d2fbba0-00059709",
        "745c2bf6-51da-4211-8bd9-ec223d2fbba0-0005972b",
        "745c2bf6-51da-4211-8bd9-ec223d2fbba0-00059732",
        "64b6bc77-da9e-4c0e-b356-2912f3410909-00059801",
        "64b6bc77-da9e-4c0e-b356-2912f3410909-00059802",
        "64b6bc77-da9e-4c0e-b356-2912f3410909-00059803",
        "64b6bc77-da9e-4c0e-b356-2912f3410909-0005991a",
        "64b6bc77-da9e-4c0e-b356-2912f3410909-00059924",
        "64b6bc77-da9e-4c0e-b356-2912f3410909-00059a16",
        "64b6bc77-da9e-4c0e-b356-2912f3410909-00059a1e",
        "a714feea-783d-4f19-8bc4-851fd13b9f47-00059aaa",
        "a714feea-783d-4f19-8bc4-851fd13b9f47-00059aab",
        "a714feea-783d-4f19-8bc4-851fd13b9f47-00059aac",
        "a714feea-783d-4f19-8bc4-851fd13b9f47-00059aad",
        "a714feea-783d-4f19-8bc4-851fd13b9f47-00059aae",
        "a714feea-783d-4f19-8bc4-851fd13b9f47-00059aaf",
        "a714feea-783d-4f19-8bc4-851fd13b9f47-00059ab0",
        "a714feea-783d-4f19-8bc4-851fd13b9f47-00059ab1",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-00059c91",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-00059ce2",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-00059ce3",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-00059ce4",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a163",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a177",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a248",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a249",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a253",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a254",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a25e",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a25f",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a2b4",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a2b5",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a334",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a335",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a33f",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a340",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a34a",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a34b",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a67c",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a976",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a977",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a978",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a9dd",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a9de",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a9e8",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a9e9",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a9f3",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a9f4",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a9fc",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005a9fd",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa05",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa06",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa10",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa11",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa32",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa33",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa34",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa35",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa36",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa37",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa38",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa44",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa45",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa46",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa47",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa48",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa49",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005aa4a",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad6f",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad70",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad71",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad72",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad73",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad74",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad75",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad76",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad77",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad78",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad79",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad7a",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad7b",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad7c",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad7d",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad7e",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad7f",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad80",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad81",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad82",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad83",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad84",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad85",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad86",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad87",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad88",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad89",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad8b",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad8c",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad8d",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad8e",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad8f",
        "f9faae44-1610-4f1d-862a-74cbb18bfa49-0005ad90",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005ae36",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005ae37",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005ae38",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005ae39",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005ae3a",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005ae3b",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005ae3c",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005ae3d",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005ae3e",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005ae3f",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005ae40",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005ae41",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005ae42",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005ae43",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005ae44",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005aefa",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005af9a",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005afc2",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005afd5",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005afff",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b00d",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b06a",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b088",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b089",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b08a",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b097",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b098",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b099",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b111",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b112",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b116",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b117",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b118",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b119",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b11a",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b11b",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b11c",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b11d",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b11e",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b11f",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b120",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b121",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b122",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b123",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b124",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b125",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b126",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b127",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b128",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b129",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b12a",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b12b",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b12c",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b12d",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b12e",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b12f",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b130",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b131",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b132",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b133",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b134",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b135",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b136",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b137",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b138",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b139",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b13a",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b13b",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b13c",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b13d",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b13e",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b13f",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b140",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b141",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b142",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b143",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b144",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b145",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b146",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b147",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b148",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b149",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b14a",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b14b",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b14c",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b14d",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b14e",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b14f",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b150",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b151",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b152",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b153",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b154",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b155",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b156",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b157",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b158",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b159",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b15a",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b15b",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b15c",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b15d",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b15e",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b15f",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b160",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b161",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b162",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b163",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b164",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b165",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b166",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b167",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b168",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b169",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b16a",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b16b",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b16c",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b16d",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b16e",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b16f",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b170",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b171",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b172",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b173",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b174",
        "c9c65eb3-6eeb-4e41-9987-859aa67ae326-0005b175",
        "faaa9b39-5718-4b9e-a3e6-37109586e1d5-0005b2f1",
        "faaa9b39-5718-4b9e-a3e6-37109586e1d5-0005b2f2",
        "faaa9b39-5718-4b9e-a3e6-37109586e1d5-0005b622",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005ba20",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005ba25",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005ba26",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005ba29",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005ba2c",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005ba3a",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005ba3b",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005ba3c",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005ba3d",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005ba3e",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005ba4a",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005ba4b",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005ba4c",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005ba4d",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005ba4e",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c294",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c295",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c296",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c297",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c298",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c36a",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c36b",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c36c",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c36d",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c36e",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c395",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c396",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c397",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c398",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c399",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c39a",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c39b",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c39c",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c39d",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c39e",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c3ad",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c3ae",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c3af",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c3b0",
        "a576850d-84e5-4c71-b49e-f7712c262e44-0005c3b1",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3dd",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3de",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3df",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3e0",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3e1",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3e2",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3e3",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3e4",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3e5",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3e6",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3e7",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3e8",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3e9",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3ea",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3eb",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3ec",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3ed",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3ee",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3ef",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3f0",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3f1",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3f2",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3f3",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3f4",
        "8d6b618a-26c6-4b80-83cf-80ea013fa5df-0005c3f5",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4d8",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4d9",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4da",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4db",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4dc",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4dd",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4de",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4df",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4e0",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4e1",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4e2",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4e3",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4e4",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4e5",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4e6",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4e7",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4e8",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4e9",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4ea",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4eb",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4ec",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4ed",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4ee",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4ef",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4f0",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4f1",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4f2",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4f3",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4f4",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4f5",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4f6",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4f7",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4f8",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4f9",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4fa",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4fb",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4fc",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4fd",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4fe",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c4ff",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c500",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c501",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c502",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c503",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c504",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c505",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c506",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c507",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c508",
        "10ef3744-66c6-45a1-94cf-b239d4d01540-0005c509",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c568",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c569",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c56a",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c56b",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c56c",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c56d",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c56e",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c56f",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c570",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c571",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c572",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c573",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c574",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c575",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c576",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c577",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c578",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c579",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c57a",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c57b",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c57c",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c57d",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c57e",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c57f",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c580",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5c7",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5c8",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5c9",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5ca",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5cb",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5cc",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5cd",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5ce",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5cf",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5d0",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5d1",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5d2",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5d3",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5d4",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5d5",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5d6",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5d7",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5d8",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5d9",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5da",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5db",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5dc",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5dd",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5de",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c5df",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c638",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c639",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c63a",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c63b",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c63c",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c63d",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c63e",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c63f",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c640",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c641",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c642",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c643",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c644",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c645",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c646",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c647",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c648",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c649",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c64a",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c64b",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c64c",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c64d",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c64e",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c64f",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c650",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c68b",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c68c",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c68d",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c68e",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c68f",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c690",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c691",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c692",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c693",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c694",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c695",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c696",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c697",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c698",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c699",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c69a",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c69b",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c69c",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c69d",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c69e",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c69f",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c6a0",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c6a1",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c6a2",
        "14c41276-353f-4286-affd-3c517a6b8471-0005c6a3",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da33",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da34",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da35",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da36",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da37",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da38",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da39",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da3a",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da3b",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da3c",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da3d",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da3e",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da3f",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da40",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da41",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da42",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da43",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da44",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da45",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da46",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da47",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da48",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da49",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da4a",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da4b",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da74",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da75",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da76",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da77",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da78",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da79",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da7a",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da7b",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da7c",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da7d",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da7e",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da7f",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da80",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da81",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da82",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da83",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da84",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da85",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da86",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da87",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da88",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da89",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da8a",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da8b",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005da8c",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005dac4",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005dac5",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005dac6",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005dac7",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005dac8",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005dac9",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005daca",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005dacb",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005dacc",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db23",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db24",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db25",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db26",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db27",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db28",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db29",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db2a",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db2b",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db35",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db36",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db37",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db38",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db39",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db3a",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db3b",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db3c",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db3d",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db83",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db84",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db85",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db86",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db87",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db88",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db89",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db8a",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db8b",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db8c",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db8d",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db8e",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db8f",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db90",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db91",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db92",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db93",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db94",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db95",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db96",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db97",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db98",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db99",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db9a",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db9b",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db9c",
        "e40b53a6-89bc-4624-9a7a-e8c19130e0df-0005db9d",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dbb4",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dbb5",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dbb6",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dbb7",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dbb8",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dcdc",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dcdd",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dcde",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dcdf",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dce0",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dcf6",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dcf7",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dcf8",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dcf9",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dcfa",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd01",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd02",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd03",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd04",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd05",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd0c",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd0d",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd0e",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd0f",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd10",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd17",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd18",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd19",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd1a",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd1b",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd22",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd23",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd24",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd25",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd26",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd2d",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd2e",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd2f",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd30",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd31",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd38",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd39",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd3a",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd3b",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd3c",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd43",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd44",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd45",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd46",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd47",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd4e",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd4f",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd50",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd51",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd52",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd59",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd5a",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd5b",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd5c",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd5d",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd64",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd65",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd66",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd67",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd68",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd6f",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd70",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd71",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd72",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd73",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd7a",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd7b",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd7c",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd7d",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005dd7e",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de13",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de14",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de17",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de18",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de19",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de1a",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de1b",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de1c",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de1d",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de1e",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de1f",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de20",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de21",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de22",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de23",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de24",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de25",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de26",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de27",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de28",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de29",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de2a",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de2b",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de2c",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de2d",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de2e",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de2f",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de30",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de31",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de32",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de33",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de34",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de35",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de36",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de37",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de38",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de39",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de3a",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de3b",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de3c",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de3d",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de3e",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de3f",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de40",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de41",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de42",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de43",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de44",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de45",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de46",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de47",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de48",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de49",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de4a",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de4b",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de4c",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de4d",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de4e",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de4f",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de50",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de51",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de52",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de53",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de54",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de55",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de56",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de57",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de58",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de59",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de5a",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de5b",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de5c",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de5d",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de5e",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de5f",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de60",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de61",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de62",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de63",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de64",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de65",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de66",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de67",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de68",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de69",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de6a",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de6b",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de6c",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de6d",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de6e",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de6f",
        "edcfb88d-b6cc-4ad9-aa36-d6cc4de32048-0005de70",
        "6941a90a-cb5e-4438-8528-f798a70fec33-0005dea1",
        "6941a90a-cb5e-4438-8528-f798a70fec33-0005defb",
        "6941a90a-cb5e-4438-8528-f798a70fec33-0005df30",
        "6941a90a-cb5e-4438-8528-f798a70fec33-0005df31",
        "9ac0a54a-d7da-465f-b714-a7fbc55c485f-0005e088",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e376",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e377",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e378",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e3d6",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e5b6",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e5b7",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e5b8",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e5b9",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e653",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e654",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e655",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e656",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e699",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e69a",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e69b",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e69c",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6a8",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6a9",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6aa",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6ab",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6b7",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6b8",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6b9",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6ba",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6d2",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6d3",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6d4",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6d5",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6d6",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6d7",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6d8",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6d9",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6da",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6db",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6dc",
        "02e52669-3016-46d2-9ae1-c0de3bb9e9d5-0005e6dd",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607b6",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607b7",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607b8",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607b9",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607ba",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607bb",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607bc",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607bd",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607be",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607bf",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607c0",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607c1",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607c2",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607c3",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607c4",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607c5",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607c6",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607c7",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607c8",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607c9",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607ca",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607cb",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607cc",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607cd",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607ce",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607fd",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607fe",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000607ff",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060800",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060801",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060802",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060803",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060804",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060805",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060806",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060807",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060808",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060809",
        "854df70d-ec33-47a4-8d86-743c484d72c1-0006080a",
        "854df70d-ec33-47a4-8d86-743c484d72c1-0006080b",
        "854df70d-ec33-47a4-8d86-743c484d72c1-0006080c",
        "854df70d-ec33-47a4-8d86-743c484d72c1-0006080d",
        "854df70d-ec33-47a4-8d86-743c484d72c1-0006080e",
        "854df70d-ec33-47a4-8d86-743c484d72c1-0006080f",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060810",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060811",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060812",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060813",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060814",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060815",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060852",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060853",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060854",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060855",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060856",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060857",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060858",
        "854df70d-ec33-47a4-8d86-743c484d72c1-00060859",
        "854df70d-ec33-47a4-8d86-743c484d72c1-0006085a",
        "854df70d-ec33-47a4-8d86-743c484d72c1-0006085b",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000608bc",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000608bd",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000608be",
        "854df70d-ec33-47a4-8d86-743c484d72c1-000608f4",
        "e67da797-0bbf-4826-8f70-df74cad922d3-00061b30"
      ],
      "Id": "f142f5a05f9f4f36b0f0bcfca55cc423",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5f93b0ceec5c4651b2ed01d0d99aae3e",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Pick multiple elements from the Revit document."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "import clr, os, csv, math\r\nfrom datetime import datetime\r\n\r\n# --- Revit & Dynamo plumbing ---------------------------------------------\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import ElementId, Options\r\n\r\nclr.AddReference(\"RevitServices\")\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# --- inputs ---------------------------------------------------------------\r\nwalls_in = IN[0]\r\npath_in  = IN[1]\r\n\r\n# --- normalize file path -------------------------------------------------\r\nif isinstance(path_in, list):\r\n    if len(path_in)!=1 or not isinstance(path_in[0], str):\r\n        raise ValueError(\"IN[1] must be a file-path string or list of one.\")\r\n    file_path = path_in[0]\r\nelif isinstance(path_in, str):\r\n    file_path = path_in\r\nelse:\r\n    raise ValueError(\"IN[1] must be a string or single-item list of string.\")\r\n\r\nfolder = os.path.dirname(file_path)\r\nif folder and not os.path.exists(folder):\r\n    os.makedirs(folder)\r\n\r\nbase, ext = os.path.splitext(file_path)\r\nif not ext:\r\n    ext = \".csv\"\r\nts = datetime.now().strftime(\"%Y%m%d-%H%M%S\")\r\nfile_path   = f\"{base}_{ts}{ext}\"\r\nhosted_path = f\"{base}_Hosted_{ts}{ext}\"\r\n\r\n# --- flatten nesting & unwrap to DB elements -----------------------------\r\nflat = []\r\nfor item in walls_in:\r\n    flat.extend(item) if isinstance(item, list) else flat.append(item)\r\n\r\ndef to_db(e):\r\n    if hasattr(e, \"InternalElement\"): return e.InternalElement\r\n    if isinstance(e, ElementId):        return doc.GetElement(e)\r\n    if isinstance(e, int):              return doc.GetElement(ElementId(e))\r\n    return e\r\n\r\nwalls = [to_db(w) for w in flat if to_db(w) is not None]\r\n\r\n# --- unit conversion & param helper --------------------------------------\r\nFT2M    = 0.3048\r\nSQFT2M2 = 0.092903\r\nCUFT2M3 = 0.0283168\r\n\r\ndef get_param(elem, name, factor=1.0):\r\n    p = elem.LookupParameter(name)\r\n    if not p or not p.HasValue: return None\r\n    try:\r\n        return round(p.AsDouble()*factor, 2)\r\n    except:\r\n        return None\r\n\r\n# --- orientation helpers -------------------------------------------------\r\ndef azimuth_from_vec(v):\r\n    ang = math.degrees(math.atan2(v.X, v.Y))\r\n    return round((ang+360)%360, 2)\r\n\r\ndef vec_components(v):\r\n    return round(v.X,2), round(v.Y,2), round(v.Z,2)\r\n\r\n# --- collect wall data ---------------------------------------------------\r\nwall_rows = []\r\nfor w in walls:\r\n    wid   = w.Id.IntegerValue\r\n    name  = getattr(w, \"Name\", \"\")\r\n    try:    wtype = w.WallType.Name\r\n    except: wtype = \"\"\r\n    lvl = \"\"\r\n    try:\r\n        lid = w.LevelId\r\n        lvl = doc.GetElement(lid).Name if lid else \"\"\r\n    except: pass\r\n\r\n    length = get_param(w, \"Length\", FT2M)\r\n    area   = get_param(w, \"Area\",   SQFT2M2)\r\n    volume = get_param(w, \"Volume\", CUFT2M3)\r\n\r\n    # orientation vector + azimuth\r\n    try:\r\n        v = w.Orientation\r\n        ox, oy, oz = vec_components(v)\r\n        azi = azimuth_from_vec(v)\r\n    except:\r\n        ox=oy=oz=azi=None\r\n\r\n    wall_rows.append([\r\n        wid, name, wtype, lvl,\r\n        length, area, volume,\r\n        ox, oy, oz, azi\r\n    ])\r\n\r\n# --- collect hosted-insert data ------------------------------------------\r\nhosted_rows = []\r\nopts = Options()\r\n\r\nfor w in walls:\r\n    host_id = w.Id.IntegerValue\r\n    try:\r\n        inserts = w.FindInserts(True, False, False, False)\r\n    except:\r\n        inserts = []\r\n\r\n    for eid in inserts:\r\n        inst = doc.GetElement(eid)\r\n        if not inst: continue\r\n\r\n        iid = inst.Id.IntegerValue\r\n        cat = inst.Category.Name if inst.Category else \"\"\r\n        fam=typ=\"\"\r\n        try:\r\n            sym = inst.Symbol\r\n            fam = sym.Family.Name\r\n            typ = sym.Name\r\n        except: pass\r\n\r\n        lvl=\"\"\r\n        lp = inst.LookupParameter(\"Level\")\r\n        if lp and lp.HasValue:\r\n            try:\r\n                lvl = doc.GetElement(lp.AsElementId()).Name\r\n            except: pass\r\n\r\n        # orientation\r\n        try:\r\n            fv = inst.FacingOrientation\r\n            hox, hoy, hoz = vec_components(fv)\r\n            hazi = azimuth_from_vec(fv)\r\n        except:\r\n            hox=hoy=hoz=hazi=None\r\n\r\n        # glass area for windows\r\n        glass=None\r\n        if cat.lower()==\"windows\":\r\n            total=0.0\r\n            try:\r\n                geom = inst.get_Geometry(opts)\r\n            except:\r\n                geom=[]\r\n            for g in geom:\r\n                solid = g if hasattr(g,\"Faces\") else None\r\n                if not solid: continue\r\n                for face in solid.Faces:\r\n                    mid = face.MaterialElementId\r\n                    if mid and mid.IntegerValue>=0:\r\n                        mat = doc.GetElement(mid)\r\n                        if mat and \"glass\" in mat.Name.lower():\r\n                            total += face.Area * SQFT2M2\r\n            glass = round(total,2)\r\n\r\n        hosted_rows.append([\r\n            iid, cat, fam, typ, lvl, host_id,\r\n            hox, hoy, hoz, hazi, glass\r\n        ])\r\n\r\n# --- CSV writer with retry ------------------------------------------------\r\ndef write_csv(path, header, rows):\r\n    try:\r\n        with open(path,\"w\",newline=\"\",encoding=\"utf-8-sig\") as f:\r\n            w=csv.writer(f)\r\n            w.writerow(header)\r\n            w.writerows(rows)\r\n        return path\r\n    except PermissionError:\r\n        b,e=os.path.splitext(path)\r\n        ts2=datetime.now().strftime(\"%Y%m%d-%H%M%S\")\r\n        newp=f\"{b}_{ts2}{e}\"\r\n        with open(newp,\"w\",newline=\"\",encoding=\"utf-8-sig\") as f:\r\n            w=csv.writer(f)\r\n            w.writerow(header)\r\n            w.writerows(rows)\r\n        return newp\r\n\r\nh1 = [\"ElementId\",\"Name\",\"Wall Type\",\"Level\",\r\n      \"Length (m)\",\"Area (m²)\",\"Volume (m³)\",\r\n      \"OriX\",\"OriY\",\"OriZ\",\"Azimuth (°)\"]\r\nh2 = [\"ElementId\",\"Category\",\"Family\",\"Type\",\"Level\",\"HostWallId\",\r\n      \"OriX\",\"OriY\",\"OriZ\",\"Azimuth (°)\",\"Glass Area (m²)\"]\r\n\r\nout1 = write_csv(file_path,   h1, wall_rows)\r\nout2 = write_csv(hosted_path, h2, hosted_rows)\r\n\r\nOUT = out1, out2\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "8fa0998a9bd74596892d6e1e2a9e430b",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "0fc4e994257a47b6823a8f02fdc846d3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8504a69a4ce34629b2ee92e9d7d89ff8",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "779ac829ca8244788e277ebca5e31bce",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Connectors": [
    {
      "Start": "6fff8f7cc3c84195bf77fc590543c099",
      "End": "b95ac342e5704f8f8e2e4f1a87899451",
      "Id": "b9a98b96c85b4648974b9496616075bf",
      "IsHidden": "False"
    },
    {
      "Start": "6fff8f7cc3c84195bf77fc590543c099",
      "End": "aa690db7505641c49b7a3620d0a4cd66",
      "Id": "d6de2cab243444fb9b2b053a36a22b4d",
      "IsHidden": "False"
    },
    {
      "Start": "a6547b8718cf4bb093687d754a5bb386",
      "End": "fa5e745a3b714f90b470d99a643b969a",
      "Id": "4a1150cbacda44f797782fac63319a0a",
      "IsHidden": "False"
    },
    {
      "Start": "cd5dd8e85057449498507ea5a57e2d0a",
      "End": "1d34743e177743a4b7f27f1bfba3b7a3",
      "Id": "e03ba9331c654daca7ea00753845d9a6",
      "IsHidden": "False"
    },
    {
      "Start": "c2f7e4e3cb594e9e932039b6c091329d",
      "End": "5c917e3ef40f4b2a8566748a9fa10295",
      "Id": "c8922fd1d29b434ca6882243277effc5",
      "IsHidden": "False"
    },
    {
      "Start": "5f93b0ceec5c4651b2ed01d0d99aae3e",
      "End": "fe7bc7de44b049bd820c0a7190c7b4ba",
      "Id": "6152db7dbac14538898da82d18e114c3",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "Walls_20250618-141039.csv",
      "ReferenceType": "External",
      "Nodes": [
        "61cb6740d7944a5785f870558da14bb0"
      ]
    }
  ],
  "EnableLegacyPolyCurveBehavior": true,
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "3.3",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "8.2",
      "Data": {}
    }
  ],
  "Author": "None provided",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "3.3.0.6316",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "bf909234d1e64765abb77ea839412e94",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -521.1975058826298,
        "Y": -177.87974032204403
      },
      {
        "Id": "fa98508885904c9faac955edbfccb3ac",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -194.3372561209884,
        "Y": -199.48588844543067
      },
      {
        "Id": "4549800d541448539cbf9bfaa74bd8b4",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 527.9863682191825,
        "Y": -157.86082330799508
      },
      {
        "Id": "b8dbbaf47a7c4510a58471e2486cfc3e",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5.349103722135283,
        "Y": 241.40402076175906
      },
      {
        "Id": "5c0f692556ec46f6b6e16c92b81210f8",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 630.9026857632492,
        "Y": -68.01793741888957
      },
      {
        "Id": "4ea5e41c32a34f019d55c24f1f710da7",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -224.02408428252437,
        "Y": 59.90856159314018
      },
      {
        "Id": "305c1fc1347241478b4d8709e99faec8",
        "Name": "working Code for the wall and ID and dims ",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": false,
        "X": 645.8960712292926,
        "Y": -396.34600776890505
      },
      {
        "Id": "61cb6740d7944a5785f870558da14bb0",
        "Name": "File Path",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 48.04488721692735,
        "Y": -48.1564035630484
      },
      {
        "Id": "e06a5457231945b48df3957ccfb35b29",
        "Name": "WorkingCode with wall and hosted elements ",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": 353.07249846431586,
        "Y": -427.45364355840354
      },
      {
        "Id": "f142f5a05f9f4f36b0f0bcfca55cc423",
        "Name": "Pick Model Elements",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -634.5933060398204,
        "Y": 139.82618330944985
      },
      {
        "Id": "8fa0998a9bd74596892d6e1e2a9e430b",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": 169.77444201567118,
        "Y": -271.49243455357146
      }
    ],
    "Annotations": [],
    "X": -167.37676069119453,
    "Y": 345.8020232373136,
    "Zoom": 0.7022367343480378
  }
}